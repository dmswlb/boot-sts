#ê¸°ë³¸ portë 8080 (ì°ë¦¬ pcë oracleì´ ì´ë¯¸ 8080ì ì¬ì©ì¤)
server.port=7777
app.title=Shinhantì ì¸
#server.servlet.context-path=/app
logging.level.org.hibernate=info
spring.mvc.throw-exception-if-no-handler-found=true

#ì¤í¤ë§ìì± (create, create-drop, update:ë³ê²½ ë¶ë¶ë§ ë°ì, validate, none)
# tableì ìëìì± í  ê²ì¸ì§ , ìëìì± í  ê²ì¸ì§
#í° ê·ëª¨ì íë¡ì í¸ë íì´ë¸ì ë³ëë¡ ìì±íê³  ì½ëë¥¼ ìì±íë ê²ì´ ì¼ë°ì ì´ë¤.
#DDL(create, drop...)
spring.jpa.hibernate.ddl-auto=update
# DDLìì±ì ë°ì´í°ë² ì´ì¤ ê³ ì ì ê¸°ë¥ì ì¬ì©íëê°?
spring.jpa.generate-ddl=false
#ì¤íëë SQLë¬¸ì ë³´ì¬ì¤ ê²ì¸ê°? 
spring.jpa.show-sql=true

#N+1 문제 해결방법3(Entity에 넣는 방법)
spring.jpa.properties.hibernatte.default_batch_fetch_size=100
#//N+1 문제 해결방법2(Entity에 넣는 방법)
#BatchSize(size = 100)

###SpringBoot ì´ì©, JPA ì¬ì©, Oracle/MySQL
#1. Driver ì¤ì¹ (pom.xml)
#2. application.properties ì¤ì íì¼ì ìì±ë¤ì ì¤ì íë¤.


#oracle
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost/xe
spring.datasource.username=hr
spring.datasource.password=hr
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

#mysql
#spring.datasource.url=jdbc:mysql://192.168.0.38:3306/hr?characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.username=hr
#spring.datasource.password=hr
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.hibernate.hbm2ddl.auto=update
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQLDialect

#maria
#spring.datasource.url=jdbc:mariadb://localhost:3306/hr?characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.username=hr
#spring.datasource.password=hr
#spring.datasource.driverClassName=org.mariadb.jdbc.Driver
#spring.hibernate.hbm2ddl.auto=update
#spring.hibernate.dialect=org.hibernate.dialect.MariaDBDialect